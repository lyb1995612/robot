<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.csjbot.robot.biz.cms.dao.CmsRobotDao">
	<resultMap id="BaseResultMap" type="com.csjbot.robot.biz.cms.model.CmsRobot">
		<result property="id" column="id" jdbcType="CHAR" />
		<result column="sn" property="sn" jdbcType="VARCHAR" />
		<result column="shop_fk" property="shop_fk" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR"/>
		<result column="type_name" property="type_name" jdbcType="VARCHAR" />
		<result column="shop_name" property="shop_name" jdbcType="VARCHAR"/>
		<result column="valid" property="valid" jdbcType="TINYINT" />
		<result column="register" property="register" jdbcType="TIMESTAMP" />
		<result column="updater_fk" property="updater_fk" jdbcType="CHAR" />
		<result column="creator_fk" property="creator_fk" jdbcType="CHAR" />
		<result column="date_update" property="date_update" jdbcType="TIMESTAMP" />
		<result column="date_create" property="date_create" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		id, shop_fk,sn,shop_fk, type, valid, register, updater_fk, creator_fk,
		date_update,
		date_create
	</sql>

	<select id="page" parameterType="map" resultMap="BaseResultMap">
		SELECT id, sn,shop_fk, type,valid, register, updater_fk,
		creator_fk,date_update, date_create,
		(SELECT shop_name FROM scs_shop WHERE scs_shop.id = shop_fk) AS shop_name,
		(SELECT name FROM sys_data_dictionary WHERE id = type) AS type_name
		FROM cms_robot
		WHERE valid = 1
		<if test="sn != null and sn !=''">
			AND sn LIKE CONCAT('%', #{sn},'%')
		</if>
		<if test="type != null and type !='' and type != '-1' ">
			AND ( upper(`type`) LIKE CONCAT('%', #{type},'%'))
		</if>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from cms_robot
		where id = #{id,jdbcType=CHAR}
	</select>
	
	<select id="selectSNById" resultType="String"
		parameterType="String">
		SELECT sn FROM cms_robot WHERE id = #{id,jdbcType=CHAR}
	</select>

	<select id="getCmsRobots" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cms_robot where valid = 1 and sn not in(select sn from
		cms_robot_product_ref group by sn)
	</select>
	
	<select id="getAdCmsRobots" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cms_robot where valid = 1 and sn not in(select sn from
		cms_robot_advertise_ref group by sn)
	</select>

	<select id="selectBySN" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from cms_robot
		where sn = #{sn,jdbcType=VARCHAR}
	</select>

	<delete id="delete" parameterType="map">
		delete from cms_robot
		where id = #{id,jdbcType=CHAR}
	</delete>

	<insert id="insert" parameterType="com.csjbot.robot.biz.cms.model.CmsRobot">
		insert into cms_robot (id, sn,
		type, valid, register, updater_fk,
		creator_fk, date_update,
		date_create, shop_fk)
		values (#{id,jdbcType=CHAR},
		#{sn,jdbcType=VARCHAR},
		#{type,jdbcType=INTEGER}, 1,now(),
		#{updater_fk,jdbcType=CHAR}, #{creator_fk,jdbcType=CHAR},
		now(), now(),
		#{shop_fk,jdbcType=CHAR})
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.csjbot.robot.biz.cms.model.CmsRobot">
		UPDATE cms_robot
		SET sn = #{sn,jdbcType=VARCHAR},
		shop_fk = #{shop_fk,jdbcType=CHAR},
		type = #{type,jdbcType=INTEGER},
		valid = #{valid,jdbcType=TINYINT},
		updater_fk = #{updater_fk,jdbcType=CHAR},
		creator_fk = #{creator_fk,jdbcType=CHAR},
		date_update = now(),
		date_create = #{date_create,jdbcType=TIMESTAMP}
		WHERE id = #{id,jdbcType=CHAR}
	</update>

	<select id="getRobotGroupRef" parameterType="map" resultMap="BaseResultMap">
		<!-- SELECT IFNULL(rpr.valid = 1, 0) AS checked, rpr.id, p.id AS permission_id, 
			p.code AS code, p.name AS name FROM ( SELECT * FROM sys_permission ) p LEFT 
			JOIN sys_role_permission_ref rpr ON p.id = rpr.permission_fk AND rpr.role_fk 
			= #{roleId} order by p.code; -->
	</select>
</mapper>