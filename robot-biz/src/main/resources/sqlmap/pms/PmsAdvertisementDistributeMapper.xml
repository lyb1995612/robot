<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csjbot.robot.biz.pms.dao.PmsAdvertisementDistributeDao" >
  <resultMap id="BaseResultMap" type="com.csjbot.robot.biz.pms.model.PmsAdvertisementDistribute" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="sn" property="sn" jdbcType="CHAR" />
    <result column="number" property="number" jdbcType="SMALLINT" />
    <result column="valid" property="valid" jdbcType="TINYINT" />
    <result column="updater_fk" property="updater_fk" jdbcType="CHAR" />
    <result column="creator_fk" property="creator_fk" jdbcType="CHAR" />
    <result column="date_update" property="date_update" jdbcType="TIMESTAMP" />
    <result column="date_create" property="date_create" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="Result1" type="java.lang.String" >
     <result column="advertise_fk" property="advertise_fk" jdbcType="VARCHAR" />
  </resultMap>  
  <select id="page" parameterType="map" resultMap="BaseResultMap">
		select 
		id, sn, count(id) as number, valid, updater_fk, creator_fk, date_update, date_create
		from cms_robot_advertise_ref where valid = 1
       <if test="sn != null and sn !=''">
          and ( upper(`sn`) LIKE CONCAT('%', #{sn},'%'))
       </if>
         group by sn                 
  </select>
  <insert id="insert" parameterType="com.csjbot.robot.biz.pms.model.PmsAdvertisementDistribute" >
    insert into cms_robot_advertise_ref (id, sn, advertise_fk, valid, updater_fk, 
      creator_fk, date_update, date_create
      )
    values (#{id,jdbcType=CHAR}, #{sn,jdbcType=CHAR}, #{advertise_fk,jdbcType=VARCHAR}
      , 1, #{updater_fk,jdbcType=CHAR}, 
      #{creator_fk,jdbcType=CHAR},now(), now()
      )
  </insert>
  <insert id="inserts" parameterType="com.csjbot.robot.biz.pms.model.PmsAdvertisementDistribute" >
    insert into cms_robot_advertise_ref (id, sn, advertise_fk, valid, updater_fk, 
      creator_fk, date_update, date_create )
    values 
    <foreach collection ="list" item="pmsAdvertisementDistribute" index= "index" separator =",">
      (#{pmsAdvertisementDistribute.id,jdbcType=CHAR},
       #{pmsAdvertisementDistribute.sn,jdbcType=CHAR}, 
       #{pmsAdvertisementDistribute.advertise_fk,jdbcType=VARCHAR},
       1, #{pmsAdvertisementDistribute.updater_fk,jdbcType=CHAR}, 
       #{pmsAdvertisementDistribute.creator_fk,jdbcType=CHAR},now(), now())
    </foreach>  
  </insert>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from cms_robot_advertise_ref
    where sn = #{sn,jdbcType=CHAR}
  </delete>
  <select id="selectAdvertisementBySn" parameterType="map" resultMap="Result1">
		select 
		advertise_fk
		from cms_robot_advertise_ref where valid = 1 and sn = #{sn,jdbcType=CHAR}                 
  </select>  
</mapper>